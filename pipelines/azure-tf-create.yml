trigger: none

parameters:
- name: example
  displayName: Terraform Example
  type: string
  values:
  - 001_resource_group
  - 002_vnet
  - 003_storage_account
  - 004_linux_vm

stages:
- stage: Terraform

  pool:
    vmImage: ubuntu-latest

  jobs:
  - job: buildInfra
    steps:
    - task: azurekeyVault@2
      displayName: Retrieve secrets
      inputs:
        connectedServiceName: Azure
        keyVaultName: $(keyVaultName)
        secretsFilter: tf-token
        runAsPreJob: true

    - task: terraformInstaller@0
      displayName: Terraform install
      inputs:
        terraformVersion: 'latest'

    - task: replaceTokens@5
      displayName: Update token file
      inputs:
        targetFiles: $(System.DefaultWorkingDirectory)/pipelines/tfToken.json
        tokenPattern: 'azpipelines'

    - bash: |
        cd $(System.DefaultWorkingDirectory)/azure/${{ parameters.example }}/
        mv $(System.DefaultWorkingDirectory)/pipelines/tfToken.json /home/vsts/.terraform.d/credentials.tfrc.json
      displayName: Terraform login

    - task: terraformCLI@0
      displayName: Terraform init
      inputs:
        command: init
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/${{ parameters.example }}/

    - task: terraformCLI@0
      displayName: Terraform fmt
      inputs:
        command: fmt
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/${{ parameters.example }}/

    - task: terraformCLI@0
      displayName: Terraform validate
      inputs:
        command: validate
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/${{ parameters.example }}/

    - task: terraformCLI@0
      displayName: Terraform plan
      inputs:
        command: plan
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/${{ parameters.example }}/

    - task: terraformCLI@0
      displayName: Terraform apply
      inputs:
        command: apply
        commandOptions: '-auto-approve'
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/${{ parameters.example }}/
