resources:
  pipelines:
  - pipeline: TFcreate
    source: Terraform create - update infra
    project: Terraform
    trigger:
      stages:
      - Terraform_006_wordpress_with_ansible

trigger: none

pool:
  name: SelfHosted
  demands: Agent.OS -equals Linux

variables:
  basePath: $(System.DefaultWorkingDirectory)/azure/006_wordpress_with_ansible
  ansibleFolder: $(basePath)/ansible
  inventoryFile: $(ansibleFolder)/inventory_azure_rm.yml

stages:
- stage: Ansible

  jobs:
  - job: apply
    steps:
    - task: azureKeyVault@2
      displayName: Retrieve secrets
      inputs:
        connectedServiceName: Azure
        keyVaultName: $(keyVaultName)
        secretsFilter: appId,appSecret,appTenant,subscriptionId,tfToken,dbPass,wpPass
        runAsPreJob: true

    - task: terraformInstaller@0
      displayName: Terraform install
      inputs:
        terraformVersion: 'latest'

    - task: replaceTokens@5
      displayName: Update token file
      inputs:
        targetFiles: |
          $(System.DefaultWorkingDirectory)/pipelines/tfToken.json
        tokenPattern: 'azpipelines'

    - bash: |
        mv $(System.DefaultWorkingDirectory)/pipelines/tfToken.json /home/zala/.terraform.d/credentials.tfrc.json
      displayName: Terraform login

    - task: terraformCLI@0
      displayName: Terraform init
      inputs:
        command: init
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/006_wordpress_with_ansible

    - bash: |
        cd $(basePath)
        echo "$(terraform output -raw tls_private_key)" > $(ansibleFolder)/ssh_private
        chmod 400 $(ansibleFolder)/ssh_private
        APP_GTW_IP=$(terraform output -raw appgtw_public_ip)
        echo "================================"
        echo "Public IP is $APP_GTW_IP"
        echo "================================"
        echo ""
        IP=$(terraform output -json private_ips | jq ".\"back-db-02\"")
        DB_PRIVATE_IP=${IP: 1 : -1}
        echo "================================"
        echo "Private IP for DB is $DB_PRIVATE_IP"
        echo "================================"
        echo ""
        VM0=$(terraform output -json private_ips | jq ".\"front-vm-00\"")
        NODE1_IP=${VM0: 1 : -1}
        echo "================================"
        echo "Private IP for Node 1 is $DB_PRIVATE_IP"
        echo "================================"
        echo ""
        VM1=$(terraform output -json private_ips | jq ".\"front-vm-01\"")
        NODE2_IP=${VM1: 1 : -1}
        echo "================================"
        echo "Private IP for Node 2 is $DB_PRIVATE_IP"
        echo "================================"
        echo ""
        echo "##vso[task.setvariable variable=APP_GTW_IP]$APP_GTW_IP"
        echo "##vso[task.setvariable variable=DB_PRIVATE_IP]$DB_PRIVATE_IP"
        echo "##vso[task.setvariable variable=NODE1_PRIVATE_IP]$NODE1_IP"
        echo "##vso[task.setvariable variable=NODE2_PRIVATE_IP]$NODE2_IP"
      displayName: Get AppGtw public IP; DB & Node Private IPs, & private SSH key

    - task: replaceTokens@5
      displayName: Update playbooks
      inputs:
        targetFiles: |
          $(ansibleFolder)/playbook_init.yml
          $(ansibleFolder)/playbook_dbs.yml
          $(ansibleFolder)/playbook_nodes.yml
          $(ansibleFolder)/playbook_node1.yml
          $(ansibleFolder)/playbook_node2.yml
        tokenPattern: 'azpipelines'

    - bash: |
        ansible-inventory -i $(inventoryFile) --graph
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False
      displayName: Validate inventory

    - task: Ansible@0
      displayName: Update/Upgrade vms
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_init.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Preparing DB
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_dbs.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
        args: '--extra-vars "db_pass=$(dbPass) db_user=$(dbUser) db_name=$(dbName)"'
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Installing node tools
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_nodes.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
        args: '--extra-vars "db_pass=$(dbPass) db_user=$(dbUser) db_name=$(dbName) db_host=$(DB_PRIVATE_IP)"'
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Configuring node1
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_node1.yml
        inventoriesAgentMachine: hostList
        inventoryHostListAgentMachine: $(NODE1_PRIVATE_IP)
        sudoEnabled: true
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Configuring node2
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_node2.yml
        inventoriesAgentMachine: hostList
        inventoryHostListAgentMachine: $(NODE2_PRIVATE_IP)
        sudoEnabled: true
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Configuring wordpress
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_wordpress.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
        args: '--extra-vars "appGtwIp=$(APP_GTW_IP) wp_user=$(wpUser) wp_user_email=$(wpEmail) wp_pass=$(wpPass)"'
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False
