trigger: none

pool:
  name: SelfHosted
  demands: Agent.OS -equals Linux

variables:
  basePath: $(System.DefaultWorkingDirectory)/azure/006_wordpress_with_ansible
  ansibleFolder: $(basePath)/ansible
  inventoryFile: $(ansibleFolder)/inventory_azure_rm.yml

stages:
- stage: Ansible

  jobs:
  - job: apply
    steps:
    - task: azureKeyVault@2
      displayName: Retrieve secrets
      inputs:
        connectedServiceName: Azure
        keyVaultName: $(keyVaultName)
        secretsFilter: appId,appSecret,appTenant,subscriptionId,tfToken
        runAsPreJob: true

    - task: terraformInstaller@0
      displayName: Terraform install
      inputs:
        terraformVersion: 'latest'

    - task: replaceTokens@5
      displayName: Update token file
      inputs:
        targetFiles: |
          $(System.DefaultWorkingDirectory)/pipelines/tfToken.json
          $(ansibleFolder)/playbook_init.yml
          $(ansibleFolder)/playbook_dbs.yml
          $(ansibleFolder)/playbook_nodes.yml
        tokenPattern: 'azpipelines'

    - bash: |
        mv $(System.DefaultWorkingDirectory)/pipelines/tfToken.json /home/zala/.terraform.d/credentials.tfrc.json
      displayName: Terraform login

    - task: terraformCLI@0
      displayName: Terraform init
      inputs:
        command: init
        workingDirectory: $(System.DefaultWorkingDirectory)/azure/006_wordpress_with_ansible

    - bash: |
        cd $(basePath)
        echo "$(terraform output -raw tls_private_key)" > $(ansibleFolder)/ssh_private
        chmod 400 $(ansibleFolder)/ssh_private
        APP_GTW_IP=$(terraform output -raw appgtw_public_ip)
        echo "================================"
        echo "Public IP is $APP_GTW_IP"
        echo "================================"
        IP=$(terraform output -json private_ips | jq ".\"back-db-02\"")
        DB_PRIVATE_IP=${IP: 1 : -1}
        echo "================================"
        echo "Private IP for DB is $DB_PRIVATE_IP"
        echo "================================"
        echo "##vso[task.setvariable variable=APP_GTW_IP]$APP_GTW_IP"
        echo "##vso[task.setvariable variable=DB_PRIVATE_IP]$DB_PRIVATE_IP"
      displayName: Get AppGtw public IP, DB Private IP & private SSH key

    - bash: |
        ansible-inventory -i $(inventoryFile) --graph
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False
      displayName: Validate inventory

    - task: Ansible@0
      displayName: Update/Upgrade vms
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_init.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Preparing DB
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_dbs.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
        args: '--extra-vars "db_pass=$(ansibleDbPass) db_user=$(ansibleDbUser) db_name=$(ansibleDbName)"'
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False

    - task: Ansible@0
      displayName: Installing node tools
      inputs:
        ansibleInterface: agentMachine
        playbookPathOnAgentMachine: $(ansibleFolder)/playbook_nodes.yml
        inventoriesAgentMachine: file
        inventoryFileOnAgentMachine: $(inventoryFile)
        sudoEnabled: true
        args: '--extra-vars "db_pass=$(ansibleDbPass) db_user=$(ansibleDbUser) db_name=$(ansibleDbName) db_host=$(DB_PRIVATE_IP)"'
      env:
        AZURE_SUBSCRIPTION_ID: $(subscriptionId)
        AZURE_CLIENT_ID: $(appId)
        AZURE_SECRET: $(appSecret)
        AZURE_TENANT: $(appTenant)
        ANSIBLE_HOST_KEY_CHECKING: False
